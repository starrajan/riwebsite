{"ast":null,"code":"import _slicedToArray from \"/home/rajan/Desktop/riwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx\";\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\nimport Summary from \"./tokensummary/summary\";\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\nimport { Row, Col } from \"antd\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\nexport default function FreeToken() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  function onSubmit(values) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CommonHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"FREE TOKEN FEATURES\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    lg: {\n      span: 8,\n      offset: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      // same shape as initial values\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Token Account Name\"), React.createElement(FormField, {\n    name: \"accountName\",\n    type: \"text\",\n    placeholder: \"Must Be 12 Characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Token Symbol\"), React.createElement(FormField, {\n    name: \"tokenSYMBOL\",\n    type: \"text\",\n    placeholder: \"E.G RAPID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Max Supply\"), React.createElement(FormField, {\n    name: \"maxSupply\",\n    type: \"text\",\n    placeholder: \"Must Be 12 Characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Issue Tokens\"), React.createElement(FormField, {\n    name: \"issueTokens\",\n    type: \"text\",\n    placeholder: \"How Many Token Do You Want To Issue?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Issue Account\"), React.createElement(FormField, {\n    name: \"issueAccount\",\n    type: \"text\",\n    placeholder: \"Default Will Issue To (TokenAccountName)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Col, {\n    xs: {\n      span: 24\n    },\n    lg: {\n      span: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx"],"names":["React","useState","Yup","Formik","Form","FieldDiv","FormLabel","FormField","Summary","CommonHeading","Container","Row","Col","SignupSchema","object","shape","firstName","string","min","max","required","lastName","email","FreeToken","data","setData","onSubmit","values","console","log","span","offset","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\n\nimport Summary from \"./tokensummary/summary\";\n\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\n\nimport { Row, Col } from \"antd\";\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nexport default function FreeToken() {\n  const [data, setData] = useState({});\n\n  function onSubmit(values: any) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return (\n    <Container>\n      <CommonHeading>FREE TOKEN FEATURES</CommonHeading>\n      <Row>\n        <Col xs={{span:24,offset:0}} lg={{span:8,offset:8}}>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\"\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              // same shape as initial values\n              console.log(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form >\n              <FieldDiv>\n                <FormLabel>Token Account Name</FormLabel>\n                <FormField\n                  name=\"accountName\"\n                  \n                  type=\"text\"\n                  placeholder=\"Must Be 12 Characters\"\n                />\n              </FieldDiv>\n              <FieldDiv>\n                <FormLabel>Token Symbol</FormLabel>\n                <FormField\n                  name=\"tokenSYMBOL\"\n                  \n                  type=\"text\"\n                  placeholder=\"E.G RAPID\"\n                />\n              </FieldDiv>\n              <FieldDiv>\n                <FormLabel>Max Supply</FormLabel>\n                <FormField\n                  name=\"maxSupply\"\n                  \n                  type=\"text\"\n                  placeholder=\"Must Be 12 Characters\"\n                />\n              </FieldDiv>\n              <FieldDiv>\n                <FormLabel>Issue Tokens</FormLabel>\n                <FormField\n                  name=\"issueTokens\"\n                  \n                  type=\"text\"\n                  placeholder=\"How Many Token Do You Want To Issue?\"\n                />\n              </FieldDiv>\n              <FieldDiv>\n                <FormLabel>Issue Account</FormLabel>\n                <FormField\n                  name=\"issueAccount\"\n                  \n                  type=\"text\"\n                  placeholder=\"Default Will Issue To (TokenAccountName)\"\n                />\n              </FieldDiv>\n\n              <button type=\"submit\">Submit</button>\n            </Form>\n            )}\n          </Formik>\n        </Col>\n\n         <Col xs={{ span: 24 }} lg={{ span: 8 }}>\n          <Summary data={data} />\n        </Col> \n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}