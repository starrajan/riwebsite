{"ast":null,"code":"import _slicedToArray from \"/home/rajan/Desktop/riwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx\";\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\nimport Summary from \"./tokensummary/summary\";\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\nimport { Row, Col } from \"antd\";\nconst SignupSchema = Yup.object().shape({\n  accountName: Yup.string().test('len', 'Must be 12 characters', val => val.length === 12).required(\"Required\"),\n  tokenSYMBOL: Yup.string().test('len', 'Must be More Than 3 characters', val => val.length >= 3).required(\"Required\"),\n  imaxSupply: Yup.string() // .test('len', 'Must be exactly 5 characters', val => val.length === 5)\n  .required(\"Required\"),\n  issueTokens: Yup.string() // .test('len', 'Must be exactly 5 characters', val => val.length === 5)\n  .required(\"Required\"),\n  issueAccount: Yup.string().test('len', 'Must be  12 characters', val => val.length === 12).required(\"Required\")\n});\nexport default function FreeToken() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  function onSubmit(values) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CommonHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"FREE TOKEN FEATURES\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    lg: {\n      span: 8,\n      offset: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      accountName: \"\",\n      tokenSYMBOL: \"\",\n      maxSupply: \"\",\n      issueTokens: \"\",\n      issueAccount: \"\"\n    },\n    validationSchema: console.log(\"hello\", SignupSchema) // validationSchema={SignupSchema}\n    ,\n    onSubmit: values => {\n      // same shape as initial values\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Token Account Name\"), React.createElement(FormField, {\n    name: \"accountName\",\n    type: \"text\",\n    placeholder: \"Must Be 12 Characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), errors.accountName && touched.accountName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, errors.accountName) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Token Symbol\"), React.createElement(FormField, {\n    name: \"tokenSYMBOL\",\n    type: \"text\",\n    placeholder: \"E.G RAPID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), errors.tokenSYMBOL && touched.tokenSYMBOL ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errors.tokenSYMBOL) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Max Supply\"), React.createElement(FormField, {\n    name: \"maxSupply\",\n    type: \"text\",\n    placeholder: \"Must Be 12 Characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), errors.maxSupply && touched.maxSupply ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, errors.maxSupply) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Issue Tokens\"), React.createElement(FormField, {\n    name: \"issueTokens\",\n    type: \"text\",\n    placeholder: \"How Many Token Do You Want To Issue?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), errors.issueTokens && touched.issueTokens ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, errors.issueTokens) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Issue Account\"), React.createElement(FormField, {\n    name: \"issueAccount\",\n    type: \"text\",\n    placeholder: \"Default Will Issue To (TokenAccountName)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), errors.issueAccount && touched.issueAccount ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, errors.issueAccount) : null), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Col, {\n    xs: {\n      span: 24\n    },\n    lg: {\n      span: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx"],"names":["React","useState","Yup","Formik","Form","FieldDiv","FormLabel","FormField","Summary","CommonHeading","Container","Row","Col","SignupSchema","object","shape","accountName","string","test","val","length","required","tokenSYMBOL","imaxSupply","issueTokens","issueAccount","FreeToken","data","setData","onSubmit","values","console","log","span","offset","maxSupply","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\n\nimport Summary from \"./tokensummary/summary\";\n\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\n\nimport { Row, Col } from \"antd\";\n\nconst SignupSchema = Yup.object().shape({\n  accountName: Yup.string()\n  .test('len', 'Must be 12 characters', val => val.length === 12)\n    .required(\"Required\"),\n  tokenSYMBOL: Yup.string()\n  .test('len', 'Must be More Than 3 characters', val => val.length >= 3)\n    .required(\"Required\"),\n  imaxSupply: Yup.string()\n  // .test('len', 'Must be exactly 5 characters', val => val.length === 5)\n    .required(\"Required\"),\n  issueTokens: Yup.string()\n  // .test('len', 'Must be exactly 5 characters', val => val.length === 5)\n    .required(\"Required\"),\n  issueAccount: Yup.string()\n  .test('len', 'Must be  12 characters', val => val.length === 12)\n    .required(\"Required\")\n});\n\nexport default function FreeToken() {\n  const [data, setData] = useState({});\n\n  function onSubmit(values: any) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return (\n    <Container>\n      <CommonHeading>FREE TOKEN FEATURES</CommonHeading>\n      <Row>\n        <Col xs={{ span: 24, offset: 0 }} lg={{ span: 8, offset: 8 }}>\n          <Formik\n            initialValues={{\n              accountName: \"\",\n              tokenSYMBOL: \"\",\n              maxSupply: \"\",\n              issueTokens: \"\",\n              issueAccount: \"\"\n            }}\n            \n            \n            validationSchema={console.log(\"hello\",SignupSchema)}\n            // validationSchema={SignupSchema}\n            onSubmit={values => {\n              // same shape as initial values\n              console.log(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <FieldDiv>\n                  <FormLabel>Token Account Name</FormLabel>\n                  <FormField\n                    name=\"accountName\"\n                    type=\"text\"\n                    placeholder=\"Must Be 12 Characters\"\n                  />\n                  {errors.accountName && touched.accountName ? (\n                    <div>{errors.accountName}</div>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Token Symbol</FormLabel>\n                  <FormField\n                    name=\"tokenSYMBOL\"\n                    type=\"text\"\n                    placeholder=\"E.G RAPID\"\n                  />\n                  {errors.tokenSYMBOL && touched.tokenSYMBOL ? (\n                    <div>{errors.tokenSYMBOL}</div>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Max Supply</FormLabel>\n                  <FormField\n                    name=\"maxSupply\"\n                    type=\"text\"\n                    placeholder=\"Must Be 12 Characters\"\n                  />\n                  {errors.maxSupply && touched.maxSupply ? (\n                    <div>{errors.maxSupply}</div>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Issue Tokens</FormLabel>\n                  <FormField\n                    name=\"issueTokens\"\n                    type=\"text\"\n                    placeholder=\"How Many Token Do You Want To Issue?\"\n                  />\n                  {errors.issueTokens && touched.issueTokens ? (\n                    <div>{errors.issueTokens}</div>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Issue Account</FormLabel>\n                  <FormField\n                    name=\"issueAccount\"\n                    type=\"text\"\n                    placeholder=\"Default Will Issue To (TokenAccountName)\"\n                  />\n                  {errors.issueAccount && touched.issueAccount ? (\n                    <div>{errors.issueAccount}</div>\n                  ) : null}\n                </FieldDiv>\n\n                <button type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n        </Col>\n\n        <Col xs={{ span: 24 }} lg={{ span: 8 }}>\n          <Summary data={data} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}