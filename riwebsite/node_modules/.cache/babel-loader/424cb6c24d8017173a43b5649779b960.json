{"ast":null,"code":"import _slicedToArray from \"/home/rajan/Desktop/riwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx\";\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\nimport Summary from \"./tokensummary/summary\";\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container, ErrorDiv } from \"./styles\";\nimport { Row, Col } from \"antd\";\nconst SignupSchema = Yup.object().shape({\n  accountName: Yup.string().length(12, \"Must be 12 Character\").required(\"Required\"),\n  tokenSYMBOL: Yup.string().min(3, \"Must be More than or Equal to 3 Character\").max(7, \"Must be less than or Equal to 7 Character\").required(\"Required\"),\n  maxSupply: Yup.string().required(\"Required\"),\n  issueTokens: Yup.string().required(\"Required\"),\n  issueAccount: Yup.string().length(12, \"Must be 12 Character\").required(\"Required\")\n});\nexport default function FreeToken() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // console.log('this is data-->',data);\n  // function onSubmit(values: any) {\n  //   console.log(\"submitted and it is working fine--->\");\n  //   console.log(\"values-->\", values);\n  //   setData(values);\n  // }\n\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CommonHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"FREE TOKEN FEATURES\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    lg: {\n      span: 8,\n      offset: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      accountName: \"\",\n      tokenSYMBOL: \"\",\n      maxSupply: \"\",\n      issueTokens: \"\",\n      issueAccount: \"\"\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      // same shape as initial values\n      // console.log(\"values--->\", values);\n      setData(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Token Account Name\"), React.createElement(FormField, {\n    name: \"accountName\",\n    type: \"text\",\n    placeholder: \"Must Be 12 Characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), errors.accountName && touched.accountName ? React.createElement(ErrorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, errors.accountName) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Token Symbol\"), React.createElement(FormField, {\n    name: \"tokenSYMBOL\",\n    type: \"text\",\n    placeholder: \"E.G RAPID\",\n    onkeyup: \"this.value = this.value.toUpperCase();\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), errors.tokenSYMBOL && touched.tokenSYMBOL ? React.createElement(ErrorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, errors.tokenSYMBOL) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Max Supply\"), React.createElement(FormField, {\n    name: \"maxSupply\",\n    type: \"text\",\n    placeholder: \"Enter the Max supply\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), errors.maxSupply && touched.maxSupply ? React.createElement(ErrorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, errors.maxSupply) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Issue Tokens\"), React.createElement(FormField, {\n    name: \"issueTokens\",\n    type: \"text\",\n    placeholder: \"How Many Token Do You Want To Issue?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), errors.issueTokens && touched.issueTokens ? React.createElement(ErrorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, errors.issueTokens) : null), React.createElement(FieldDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Issue Account\"), React.createElement(FormField, {\n    name: \"issueAccount\",\n    type: \"text\",\n    placeholder: \"Default Will Issue To (TokenAccountName)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), errors.issueAccount && touched.issueAccount ? React.createElement(ErrorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, errors.issueAccount) : null), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Col, {\n    xs: {\n      span: 24\n    },\n    lg: {\n      span: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx"],"names":["React","useState","Yup","Formik","Form","FieldDiv","FormLabel","FormField","Summary","CommonHeading","Container","ErrorDiv","Row","Col","SignupSchema","object","shape","accountName","string","length","required","tokenSYMBOL","min","max","maxSupply","issueTokens","issueAccount","FreeToken","data","setData","span","offset","values","errors","touched"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAAkD,QAAlD;AAEA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,+BAArC;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,UAApC;AAEA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,MAAMC,YAAY,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,WAAW,EAAEf,GAAG,CAACgB,MAAJ,GACVC,MADU,CACH,EADG,EACC,sBADD,EAGVC,QAHU,CAGD,UAHC,CADyB;AAMtCC,EAAAA,WAAW,EAAEnB,GAAG,CAACgB,MAAJ,GACVI,GADU,CACN,CADM,EACH,2CADG,EAEVC,GAFU,CAEN,CAFM,EAEH,2CAFG,EAIVH,QAJU,CAID,UAJC,CANyB;AAWtCI,EAAAA,SAAS,EAAEtB,GAAG,CAACgB,MAAJ,GAAaE,QAAb,CAAsB,UAAtB,CAX2B;AAatCK,EAAAA,WAAW,EAAEvB,GAAG,CAACgB,MAAJ,GAAaE,QAAb,CAAsB,UAAtB,CAbyB;AActCM,EAAAA,YAAY,EAAExB,GAAG,CAACgB,MAAJ,GACXC,MADW,CACJ,EADI,EACA,sBADA,EAGXC,QAHW,CAGF,UAHE;AAdwB,CAAnB,CAArB;AAoBA,eAAe,SAASO,SAAT,GAAqB;AAAA,oBACV1B,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,QAC3B2B,IAD2B;AAAA,QACrBC,OADqB,kBAGlC;AAEA;AACA;AACA;AACA;AACA;;;AAEA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAT;AAAkC,IAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbd,MAAAA,WAAW,EAAE,EADA;AAEbI,MAAAA,WAAW,EAAE,EAFA;AAGbG,MAAAA,SAAS,EAAE,EAHE;AAIbC,MAAAA,WAAW,EAAE,EAJA;AAKbC,MAAAA,YAAY,EAAE;AALD,KADjB;AAQE,IAAA,gBAAgB,EAAEZ,YARpB;AASE,IAAA,QAAQ,EAAEkB,MAAM,IAAI;AAClB;AACA;AACAH,MAAAA,OAAO,CAACG,MAAD,CAAP;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,uBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGD,MAAM,CAAChB,WAAP,IAAsBiB,OAAO,CAACjB,WAA9B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWgB,MAAM,CAAChB,WAAlB,CADD,GAEG,IATN,CADF,EAYE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,OAAO,EAAC,wCAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGgB,MAAM,CAACZ,WAAP,IAAsBa,OAAO,CAACb,WAA9B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWY,MAAM,CAACZ,WAAlB,CADD,GAEG,IAVN,CAZF,EAwBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,sBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGY,MAAM,CAACT,SAAP,IAAoBU,OAAO,CAACV,SAA5B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWS,MAAM,CAACT,SAAlB,CADD,GAEG,IATN,CAxBF,EAmCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,sCAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGS,MAAM,CAACR,WAAP,IAAsBS,OAAO,CAACT,WAA9B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWQ,MAAM,CAACR,WAAlB,CADD,GAEG,IATN,CAnCF,EA8CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,0CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGQ,MAAM,CAACP,YAAP,IAAuBQ,OAAO,CAACR,YAA/B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWO,MAAM,CAACP,YAAlB,CADD,GAEG,IATN,CA9CF,EA0DE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DF,CAhBJ,CADF,CADF,EAkFE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAuB,IAAA,EAAE,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlFF,CAFF,CADF;AA2FD","sourcesContent":["import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\n\nimport Summary from \"./tokensummary/summary\";\n\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container, ErrorDiv } from \"./styles\";\n\nimport { Row, Col } from \"antd\";\n\nconst SignupSchema = Yup.object().shape({\n  accountName: Yup.string()\n    .length(12, \"Must be 12 Character\")\n\n    .required(\"Required\"),\n\n  tokenSYMBOL: Yup.string()\n    .min(3, \"Must be More than or Equal to 3 Character\")\n    .max(7, \"Must be less than or Equal to 7 Character\")\n\n    .required(\"Required\"),\n  maxSupply: Yup.string().required(\"Required\"),\n\n  issueTokens: Yup.string().required(\"Required\"),\n  issueAccount: Yup.string()\n    .length(12, \"Must be 12 Character\")\n\n    .required(\"Required\")\n});\n\nexport default function FreeToken() {\n  const [data, setData] = useState({});\n\n  // console.log('this is data-->',data);\n\n  // function onSubmit(values: any) {\n  //   console.log(\"submitted and it is working fine--->\");\n  //   console.log(\"values-->\", values);\n  //   setData(values);\n  // }\n\n  return (\n    <Container>\n      <CommonHeading>FREE TOKEN FEATURES</CommonHeading>\n      <Row>\n        <Col xs={{ span: 24, offset: 0 }} lg={{ span: 8, offset: 8 }}>\n          <Formik\n            initialValues={{\n              accountName: \"\",\n              tokenSYMBOL: \"\",\n              maxSupply: \"\",\n              issueTokens: \"\",\n              issueAccount: \"\"\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              // same shape as initial values\n              // console.log(\"values--->\", values);\n              setData(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <FieldDiv>\n                  <FormLabel>Token Account Name</FormLabel>\n                  <FormField\n                    name=\"accountName\"\n                    type=\"text\"\n                    placeholder=\"Must Be 12 Characters\"\n                  />\n                  {errors.accountName && touched.accountName ? (\n                    <ErrorDiv>{errors.accountName}</ErrorDiv>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Token Symbol</FormLabel>\n                  <FormField\n                    name=\"tokenSYMBOL\"\n                    type=\"text\"\n                    placeholder=\"E.G RAPID\"\n                    onkeyup=\"this.value = this.value.toUpperCase();\"\n                  />\n                  {errors.tokenSYMBOL && touched.tokenSYMBOL ? (\n                    <ErrorDiv>{errors.tokenSYMBOL}</ErrorDiv>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Max Supply</FormLabel>\n                  <FormField\n                    name=\"maxSupply\"\n                    type=\"text\"\n                    placeholder=\"Enter the Max supply\"\n                  />\n                  {errors.maxSupply && touched.maxSupply ? (\n                    <ErrorDiv>{errors.maxSupply}</ErrorDiv>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Issue Tokens</FormLabel>\n                  <FormField\n                    name=\"issueTokens\"\n                    type=\"text\"\n                    placeholder=\"How Many Token Do You Want To Issue?\"\n                  />\n                  {errors.issueTokens && touched.issueTokens ? (\n                    <ErrorDiv>{errors.issueTokens}</ErrorDiv>\n                  ) : null}\n                </FieldDiv>\n                <FieldDiv>\n                  <FormLabel>Issue Account</FormLabel>\n                  <FormField\n                    name=\"issueAccount\"\n                    type=\"text\"\n                    placeholder=\"Default Will Issue To (TokenAccountName)\"\n                  />\n                  {errors.issueAccount && touched.issueAccount ? (\n                    <ErrorDiv>{errors.issueAccount}</ErrorDiv>\n                  ) : null}\n                </FieldDiv>\n\n                <button type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n        </Col>\n\n        <Col xs={{ span: 24 }} lg={{ span: 8 }}>\n          <Summary data={data} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}