{"ast":null,"code":"import _slicedToArray from \"/home/rajan/Desktop/riwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx\";\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\nimport { Row, Col } from \"antd\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\nexport default function FreeToken() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  function onSubmit(values) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CommonHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"FREE TOKEN FEATURES\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      // same shape as initial values\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), errors.firstName && touched.firstName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, errors.firstName) : null, React.createElement(Field, {\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), errors.lastName && touched.lastName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, errors.lastName) : null, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), errors.email && touched.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors.email) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["/home/rajan/Desktop/riwebsite/src/modules/components/eostoken/freetoken.tsx"],"names":["React","useState","Yup","Formik","Form","Field","CommonHeading","Container","Row","Col","SignupSchema","object","shape","firstName","string","min","max","required","lastName","email","FreeToken","data","setData","onSubmit","values","console","log","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { FieldDiv } from \"./styles\";\nimport { FormLabel, FormField } from \"../../../shared/styles/styles\";\n\nimport Summary from \"./tokensummary/summary\";\n\nimport { CommonHeading } from \"../../../shared/styles/styles\";\nimport { Container } from \"./styles\";\n\nimport { Row, Col } from \"antd\";\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nexport default function FreeToken() {\n  const [data, setData] = useState({});\n\n  function onSubmit(values: any) {\n    console.log(\"submitted and it is working fine--->\");\n    console.log(\"values-->\", values);\n    setData(values);\n  }\n\n  return (\n    <Container>\n      <CommonHeading>FREE TOKEN FEATURES</CommonHeading>\n      <Row>\n        <Col>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\"\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              // same shape as initial values\n              console.log(values);\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <Field name=\"firstName\" />\n                {errors.firstName && touched.firstName ? (\n                  <div>{errors.firstName}</div>\n                ) : null}\n                <Field name=\"lastName\" />\n                {errors.lastName && touched.lastName ? (\n                  <div>{errors.lastName}</div>\n                ) : null}\n                <Field name=\"email\" type=\"email\" />\n                {errors.email && touched.email ? (\n                  <div>{errors.email}</div>\n                ) : null}\n                <button type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n        </Col>\n\n        {/* <Col xs={{ span: 24 }} lg={{ span: 8 }}>\n          <Summary data={data} />\n        </Col> */}\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}